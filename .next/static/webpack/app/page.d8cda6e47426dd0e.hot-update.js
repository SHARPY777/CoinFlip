"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/components/solana.js":
/*!**************************************!*\
  !*** ./src/app/components/solana.js ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connectWallet: function() { return /* binding */ connectWallet; },\n/* harmony export */   flipCoin: function() { return /* binding */ flipCoin; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(app-pages-browser)/./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _solanaConfig__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./solanaConfig */ \"(app-pages-browser)/./src/app/components/solanaConfig.js\");\n\n\n// Function to connect wallet\nconst connectWallet = async ()=>{\n    if ( true && window.solana && window.solana.isPhantom) {\n        try {\n            const response = await window.solana.connect();\n            console.log(\"Connected to wallet:\", response.publicKey.toString());\n            return response.publicKey.toString();\n        } catch (err) {\n            console.error(\"Connection failed:\", err);\n        }\n    } else {\n        alert(\"Phantom wallet not found! Please install the Phantom wallet extension.\");\n    }\n};\n// solanaConfig.js\nconst flipCoin = async (publicKey, amount, side)=>{\n    try {\n        // Ensure the Phantom wallet is available\n        if (!window.solana || !window.solana.isPhantom) {\n            throw new Error(\"Phantom wallet not found\");\n        }\n        const provider = window.solana; // Phantom wallet provider\n        // Connect to wallet\n        await provider.connect();\n        const walletPublicKey = provider.publicKey;\n        // Fetch the latest blockhash\n        const { blockhash } = await _solanaConfig__WEBPACK_IMPORTED_MODULE_1__.connection.getLatestBlockhash();\n        // Create a new transaction\n        const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction({\n            recentBlockhash: blockhash,\n            feePayer: walletPublicKey\n        }).add(_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.SystemProgram.transfer({\n            fromPubkey: walletPublicKey,\n            toPubkey: new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(publicKey),\n            lamports: amount * _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.LAMPORTS_PER_SOL / 100\n        }));\n        // Sign the transaction\n        let signedTransaction;\n        try {\n            signedTransaction = await provider.signTransaction(transaction);\n            if (!signedTransaction || !signedTransaction.signature) {\n                throw new Error(\"Transaction is not signed properly\");\n            }\n        } catch (signError) {\n            console.error(\"Signing failed:\", signError);\n            throw new Error(\"Transaction signing failed\");\n        }\n        // Send the transaction\n        const signature = await _solanaConfig__WEBPACK_IMPORTED_MODULE_1__.connection.sendTransaction(signedTransaction, [], {\n            skipPreflight: false\n        });\n        console.log(\"Transaction signature: \".concat(signature));\n        // Confirm the transaction\n        await _solanaConfig__WEBPACK_IMPORTED_MODULE_1__.connection.confirmTransaction(signature, \"confirmed\");\n        console.log(\"Transaction confirmed.\");\n        // Determine win/lose for testing purposes\n        const result = Math.random() > 0.5 ? \"heads\" : \"tails\";\n        return result === side ? \"win\" : \"lose\";\n    } catch (error) {\n        console.error(\"Transaction failed:\", error);\n        return \"error\";\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvY29tcG9uZW50cy9zb2xhbmEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE2SDtBQUNqRjtBQUU1Qyw2QkFBNkI7QUFDdEIsTUFBTVEsZ0JBQWdCO0lBQ3pCLElBQUksS0FBNkIsSUFBSUMsT0FBT0MsTUFBTSxJQUFJRCxPQUFPQyxNQUFNLENBQUNDLFNBQVMsRUFBRTtRQUM3RSxJQUFJO1lBQ0YsTUFBTUMsV0FBVyxNQUFNSCxPQUFPQyxNQUFNLENBQUNHLE9BQU87WUFDNUNDLFFBQVFDLEdBQUcsQ0FBQyx3QkFBd0JILFNBQVNJLFNBQVMsQ0FBQ0MsUUFBUTtZQUMvRCxPQUFPTCxTQUFTSSxTQUFTLENBQUNDLFFBQVE7UUFDcEMsRUFBRSxPQUFPQyxLQUFLO1lBQ1pKLFFBQVFLLEtBQUssQ0FBQyxzQkFBc0JEO1FBQ3RDO0lBQ0YsT0FBTztRQUNMRSxNQUFNO0lBQ1I7QUFDRixFQUFFO0FBQ0Ysa0JBQWtCO0FBQ1gsTUFBTUMsV0FBVyxPQUFPTCxXQUFXTSxRQUFRQztJQUNoRCxJQUFJO1FBQ0YseUNBQXlDO1FBQ3pDLElBQUksQ0FBQ2QsT0FBT0MsTUFBTSxJQUFJLENBQUNELE9BQU9DLE1BQU0sQ0FBQ0MsU0FBUyxFQUFFO1lBQzlDLE1BQU0sSUFBSWEsTUFBTTtRQUNsQjtRQUVBLE1BQU1DLFdBQVdoQixPQUFPQyxNQUFNLEVBQUUsMEJBQTBCO1FBRTFELG9CQUFvQjtRQUNwQixNQUFNZSxTQUFTWixPQUFPO1FBQ3RCLE1BQU1hLGtCQUFrQkQsU0FBU1QsU0FBUztRQUUxQyw2QkFBNkI7UUFDN0IsTUFBTSxFQUFFVyxTQUFTLEVBQUUsR0FBRyxNQUFNcEIscURBQVVBLENBQUNxQixrQkFBa0I7UUFFekQsMkJBQTJCO1FBQzNCLE1BQU1DLGNBQWMsSUFBSXZCLHdEQUFXQSxDQUFDO1lBQ2xDd0IsaUJBQWlCSDtZQUNqQkksVUFBVUw7UUFDWixHQUFHTSxHQUFHLENBQ0o1QiwwREFBYUEsQ0FBQzZCLFFBQVEsQ0FBQztZQUNyQkMsWUFBWVI7WUFDWlMsVUFBVSxJQUFJbEMsc0RBQVNBLENBQUNlO1lBQ3hCb0IsVUFBVWQsU0FBU25CLDZEQUFnQkEsR0FBRztRQUN4QztRQUdGLHVCQUF1QjtRQUN2QixJQUFJa0M7UUFDSixJQUFJO1lBQ0ZBLG9CQUFvQixNQUFNWixTQUFTYSxlQUFlLENBQUNUO1lBQ25ELElBQUksQ0FBQ1EscUJBQXFCLENBQUNBLGtCQUFrQkUsU0FBUyxFQUFFO2dCQUN0RCxNQUFNLElBQUlmLE1BQU07WUFDbEI7UUFDRixFQUFFLE9BQU9nQixXQUFXO1lBQ2xCMUIsUUFBUUssS0FBSyxDQUFDLG1CQUFtQnFCO1lBQ2pDLE1BQU0sSUFBSWhCLE1BQU07UUFDbEI7UUFFQSx1QkFBdUI7UUFDdkIsTUFBTWUsWUFBWSxNQUFNaEMscURBQVVBLENBQUNrQyxlQUFlLENBQUNKLG1CQUFtQixFQUFFLEVBQUU7WUFBRUssZUFBZTtRQUFNO1FBQ2pHNUIsUUFBUUMsR0FBRyxDQUFDLDBCQUFvQyxPQUFWd0I7UUFFdEMsMEJBQTBCO1FBQzFCLE1BQU1oQyxxREFBVUEsQ0FBQ29DLGtCQUFrQixDQUFDSixXQUFXO1FBQy9DekIsUUFBUUMsR0FBRyxDQUFDO1FBRVosMENBQTBDO1FBQzFDLE1BQU02QixTQUFTQyxLQUFLQyxNQUFNLEtBQUssTUFBTSxVQUFVO1FBQy9DLE9BQU9GLFdBQVdyQixPQUFPLFFBQVE7SUFDbkMsRUFBRSxPQUFPSixPQUFPO1FBQ2RMLFFBQVFLLEtBQUssQ0FBQyx1QkFBdUJBO1FBQ3JDLE9BQU87SUFDVDtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2FwcC9jb21wb25lbnRzL3NvbGFuYS5qcz9hODcxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbm5lY3Rpb24sIFB1YmxpY0tleSwgY2x1c3RlckFwaVVybCwgTEFNUE9SVFNfUEVSX1NPTCwgU3lzdGVtUHJvZ3JhbSxLZXlwYWlyLCBUcmFuc2FjdGlvbiB9IGZyb20gJ0Bzb2xhbmEvd2ViMy5qcyc7XHJcbmltcG9ydCB7IGNvbm5lY3Rpb24gfSBmcm9tICcuL3NvbGFuYUNvbmZpZyc7XHJcblxyXG4vLyBGdW5jdGlvbiB0byBjb25uZWN0IHdhbGxldFxyXG5leHBvcnQgY29uc3QgY29ubmVjdFdhbGxldCA9IGFzeW5jICgpID0+IHtcclxuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHdpbmRvdy5zb2xhbmEgJiYgd2luZG93LnNvbGFuYS5pc1BoYW50b20pIHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHdpbmRvdy5zb2xhbmEuY29ubmVjdCgpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdDb25uZWN0ZWQgdG8gd2FsbGV0OicsIHJlc3BvbnNlLnB1YmxpY0tleS50b1N0cmluZygpKTtcclxuICAgICAgICByZXR1cm4gcmVzcG9uc2UucHVibGljS2V5LnRvU3RyaW5nKCk7XHJcbiAgICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJDb25uZWN0aW9uIGZhaWxlZDpcIiwgZXJyKTtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgYWxlcnQoXCJQaGFudG9tIHdhbGxldCBub3QgZm91bmQhIFBsZWFzZSBpbnN0YWxsIHRoZSBQaGFudG9tIHdhbGxldCBleHRlbnNpb24uXCIpO1xyXG4gICAgfVxyXG4gIH07XHJcbiAgLy8gc29sYW5hQ29uZmlnLmpzXHJcbiAgZXhwb3J0IGNvbnN0IGZsaXBDb2luID0gYXN5bmMgKHB1YmxpY0tleSwgYW1vdW50LCBzaWRlKSA9PiB7XHJcbiAgICB0cnkge1xyXG4gICAgICAvLyBFbnN1cmUgdGhlIFBoYW50b20gd2FsbGV0IGlzIGF2YWlsYWJsZVxyXG4gICAgICBpZiAoIXdpbmRvdy5zb2xhbmEgfHwgIXdpbmRvdy5zb2xhbmEuaXNQaGFudG9tKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdQaGFudG9tIHdhbGxldCBub3QgZm91bmQnKTtcclxuICAgICAgfVxyXG4gIFxyXG4gICAgICBjb25zdCBwcm92aWRlciA9IHdpbmRvdy5zb2xhbmE7IC8vIFBoYW50b20gd2FsbGV0IHByb3ZpZGVyXHJcbiAgXHJcbiAgICAgIC8vIENvbm5lY3QgdG8gd2FsbGV0XHJcbiAgICAgIGF3YWl0IHByb3ZpZGVyLmNvbm5lY3QoKTtcclxuICAgICAgY29uc3Qgd2FsbGV0UHVibGljS2V5ID0gcHJvdmlkZXIucHVibGljS2V5O1xyXG4gIFxyXG4gICAgICAvLyBGZXRjaCB0aGUgbGF0ZXN0IGJsb2NraGFzaFxyXG4gICAgICBjb25zdCB7IGJsb2NraGFzaCB9ID0gYXdhaXQgY29ubmVjdGlvbi5nZXRMYXRlc3RCbG9ja2hhc2goKTtcclxuICBcclxuICAgICAgLy8gQ3JlYXRlIGEgbmV3IHRyYW5zYWN0aW9uXHJcbiAgICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gbmV3IFRyYW5zYWN0aW9uKHtcclxuICAgICAgICByZWNlbnRCbG9ja2hhc2g6IGJsb2NraGFzaCxcclxuICAgICAgICBmZWVQYXllcjogd2FsbGV0UHVibGljS2V5XHJcbiAgICAgIH0pLmFkZChcclxuICAgICAgICBTeXN0ZW1Qcm9ncmFtLnRyYW5zZmVyKHtcclxuICAgICAgICAgIGZyb21QdWJrZXk6IHdhbGxldFB1YmxpY0tleSxcclxuICAgICAgICAgIHRvUHVia2V5OiBuZXcgUHVibGljS2V5KHB1YmxpY0tleSksIC8vIFJlcGxhY2Ugd2l0aCB0aGUgYWN0dWFsIHJlY2lwaWVudCdzIHB1YmxpYyBrZXlcclxuICAgICAgICAgIGxhbXBvcnRzOiBhbW91bnQgKiBMQU1QT1JUU19QRVJfU09MIC8gMTAwLCAvLyBBZGp1c3QgYW1vdW50IGFzIG5lY2Vzc2FyeVxyXG4gICAgICAgIH0pXHJcbiAgICAgICk7XHJcbiAgXHJcbiAgICAgIC8vIFNpZ24gdGhlIHRyYW5zYWN0aW9uXHJcbiAgICAgIGxldCBzaWduZWRUcmFuc2FjdGlvbjtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBzaWduZWRUcmFuc2FjdGlvbiA9IGF3YWl0IHByb3ZpZGVyLnNpZ25UcmFuc2FjdGlvbih0cmFuc2FjdGlvbik7XHJcbiAgICAgICAgaWYgKCFzaWduZWRUcmFuc2FjdGlvbiB8fCAhc2lnbmVkVHJhbnNhY3Rpb24uc2lnbmF0dXJlKSB7XHJcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RyYW5zYWN0aW9uIGlzIG5vdCBzaWduZWQgcHJvcGVybHknKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0gY2F0Y2ggKHNpZ25FcnJvcikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJTaWduaW5nIGZhaWxlZDpcIiwgc2lnbkVycm9yKTtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RyYW5zYWN0aW9uIHNpZ25pbmcgZmFpbGVkJyk7XHJcbiAgICAgIH1cclxuICBcclxuICAgICAgLy8gU2VuZCB0aGUgdHJhbnNhY3Rpb25cclxuICAgICAgY29uc3Qgc2lnbmF0dXJlID0gYXdhaXQgY29ubmVjdGlvbi5zZW5kVHJhbnNhY3Rpb24oc2lnbmVkVHJhbnNhY3Rpb24sIFtdLCB7IHNraXBQcmVmbGlnaHQ6IGZhbHNlIH0pO1xyXG4gICAgICBjb25zb2xlLmxvZyhgVHJhbnNhY3Rpb24gc2lnbmF0dXJlOiAke3NpZ25hdHVyZX1gKTtcclxuICBcclxuICAgICAgLy8gQ29uZmlybSB0aGUgdHJhbnNhY3Rpb25cclxuICAgICAgYXdhaXQgY29ubmVjdGlvbi5jb25maXJtVHJhbnNhY3Rpb24oc2lnbmF0dXJlLCAnY29uZmlybWVkJyk7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdUcmFuc2FjdGlvbiBjb25maXJtZWQuJyk7XHJcbiAgXHJcbiAgICAgIC8vIERldGVybWluZSB3aW4vbG9zZSBmb3IgdGVzdGluZyBwdXJwb3Nlc1xyXG4gICAgICBjb25zdCByZXN1bHQgPSBNYXRoLnJhbmRvbSgpID4gMC41ID8gJ2hlYWRzJyA6ICd0YWlscyc7XHJcbiAgICAgIHJldHVybiByZXN1bHQgPT09IHNpZGUgPyAnd2luJyA6ICdsb3NlJztcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJUcmFuc2FjdGlvbiBmYWlsZWQ6XCIsIGVycm9yKTtcclxuICAgICAgcmV0dXJuICdlcnJvcic7XHJcbiAgICB9XHJcbiAgfTsiXSwibmFtZXMiOlsiQ29ubmVjdGlvbiIsIlB1YmxpY0tleSIsImNsdXN0ZXJBcGlVcmwiLCJMQU1QT1JUU19QRVJfU09MIiwiU3lzdGVtUHJvZ3JhbSIsIktleXBhaXIiLCJUcmFuc2FjdGlvbiIsImNvbm5lY3Rpb24iLCJjb25uZWN0V2FsbGV0Iiwid2luZG93Iiwic29sYW5hIiwiaXNQaGFudG9tIiwicmVzcG9uc2UiLCJjb25uZWN0IiwiY29uc29sZSIsImxvZyIsInB1YmxpY0tleSIsInRvU3RyaW5nIiwiZXJyIiwiZXJyb3IiLCJhbGVydCIsImZsaXBDb2luIiwiYW1vdW50Iiwic2lkZSIsIkVycm9yIiwicHJvdmlkZXIiLCJ3YWxsZXRQdWJsaWNLZXkiLCJibG9ja2hhc2giLCJnZXRMYXRlc3RCbG9ja2hhc2giLCJ0cmFuc2FjdGlvbiIsInJlY2VudEJsb2NraGFzaCIsImZlZVBheWVyIiwiYWRkIiwidHJhbnNmZXIiLCJmcm9tUHVia2V5IiwidG9QdWJrZXkiLCJsYW1wb3J0cyIsInNpZ25lZFRyYW5zYWN0aW9uIiwic2lnblRyYW5zYWN0aW9uIiwic2lnbmF0dXJlIiwic2lnbkVycm9yIiwic2VuZFRyYW5zYWN0aW9uIiwic2tpcFByZWZsaWdodCIsImNvbmZpcm1UcmFuc2FjdGlvbiIsInJlc3VsdCIsIk1hdGgiLCJyYW5kb20iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/components/solana.js\n"));

/***/ })

});