"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/components/solana.js":
/*!**************************************!*\
  !*** ./src/app/components/solana.js ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connectWallet: function() { return /* binding */ connectWallet; },\n/* harmony export */   flipCoin: function() { return /* binding */ flipCoin; }\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(app-pages-browser)/./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _solanaConfig__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./solanaConfig */ \"(app-pages-browser)/./src/app/components/solanaConfig.js\");\n\n\n// Function to connect wallet\nconst connectWallet = async ()=>{\n    if ( true && window.solana && window.solana.isPhantom) {\n        try {\n            const response = await window.solana.connect();\n            console.log(\"Connected to wallet:\", response.publicKey.toString());\n            return response.publicKey.toString();\n        } catch (err) {\n            console.error(\"Connection failed:\", err);\n        }\n    } else {\n        alert(\"Phantom wallet not found! Please install the Phantom wallet extension.\");\n    }\n};\n// solanaConfig.js\nconst flipCoin = async (publicKey, amount, side)=>{\n    try {\n        console.log(\"Public Key: \".concat(publicKey));\n        console.log(\"Amount: \".concat(amount));\n        console.log(\"Side chosen: \".concat(side));\n        const fromPubkey = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(publicKey);\n        // Replace with actual keypair from the connected wallet\n        const keypair = _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Keypair.generate(); // For testing, replace with actual wallet keypair\n        // Fetch the recent blockhash\n        const { blockhash } = await _solanaConfig__WEBPACK_IMPORTED_MODULE_1__.connection.getLatestBlockhash();\n        // Create the transaction\n        const transaction = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction({\n            recentBlockhash: blockhash,\n            feePayer: keypair.publicKey\n        }).add(_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.SystemProgram.transfer({\n            fromPubkey: fromPubkey,\n            toPubkey: fromPubkey,\n            lamports: amount * 2 * _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.LAMPORTS_PER_SOL / 100\n        }));\n        console.log(\"Signing transaction...\");\n        await transaction.sign(keypair); // Sign the transaction with the keypair\n        console.log(\"Sending transaction...\");\n        const signature = await _solanaConfig__WEBPACK_IMPORTED_MODULE_1__.connection.sendTransaction(transaction, [\n            keypair\n        ]);\n        console.log(\"Transaction signature: \".concat(signature));\n        await _solanaConfig__WEBPACK_IMPORTED_MODULE_1__.connection.confirmTransaction(signature, \"confirmed\");\n        console.log(\"Transaction confirmed.\");\n        return \"win\";\n    } catch (error) {\n        console.error(\"Transaction failed:\", error);\n        return \"error\";\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvY29tcG9uZW50cy9zb2xhbmEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE2SDtBQUNqRjtBQUU1Qyw2QkFBNkI7QUFDdEIsTUFBTVEsZ0JBQWdCO0lBQ3pCLElBQUksS0FBNkIsSUFBSUMsT0FBT0MsTUFBTSxJQUFJRCxPQUFPQyxNQUFNLENBQUNDLFNBQVMsRUFBRTtRQUM3RSxJQUFJO1lBQ0YsTUFBTUMsV0FBVyxNQUFNSCxPQUFPQyxNQUFNLENBQUNHLE9BQU87WUFDNUNDLFFBQVFDLEdBQUcsQ0FBQyx3QkFBd0JILFNBQVNJLFNBQVMsQ0FBQ0MsUUFBUTtZQUMvRCxPQUFPTCxTQUFTSSxTQUFTLENBQUNDLFFBQVE7UUFDcEMsRUFBRSxPQUFPQyxLQUFLO1lBQ1pKLFFBQVFLLEtBQUssQ0FBQyxzQkFBc0JEO1FBQ3RDO0lBQ0YsT0FBTztRQUNMRSxNQUFNO0lBQ1I7QUFDRixFQUFFO0FBQ0Ysa0JBQWtCO0FBQ1gsTUFBTUMsV0FBVyxPQUFPTCxXQUFXTSxRQUFRQztJQUNoRCxJQUFJO1FBQ0ZULFFBQVFDLEdBQUcsQ0FBQyxlQUF5QixPQUFWQztRQUMzQkYsUUFBUUMsR0FBRyxDQUFDLFdBQWtCLE9BQVBPO1FBQ3ZCUixRQUFRQyxHQUFHLENBQUMsZ0JBQXFCLE9BQUxRO1FBRTVCLE1BQU1DLGFBQWEsSUFBSXZCLHNEQUFTQSxDQUFDZTtRQUVqQyx3REFBd0Q7UUFDeEQsTUFBTVMsVUFBVXBCLG9EQUFPQSxDQUFDcUIsUUFBUSxJQUFJLGtEQUFrRDtRQUV0Riw2QkFBNkI7UUFDN0IsTUFBTSxFQUFFQyxTQUFTLEVBQUUsR0FBRyxNQUFNcEIscURBQVVBLENBQUNxQixrQkFBa0I7UUFFekQseUJBQXlCO1FBQ3pCLE1BQU1DLGNBQWMsSUFBSXZCLHdEQUFXQSxDQUFDO1lBQUV3QixpQkFBaUJIO1lBQVdJLFVBQVVOLFFBQVFULFNBQVM7UUFBQyxHQUFHZ0IsR0FBRyxDQUNsRzVCLDBEQUFhQSxDQUFDNkIsUUFBUSxDQUFDO1lBQ3JCVCxZQUFZQTtZQUNaVSxVQUFVVjtZQUNWVyxVQUFVYixTQUFTLElBQUluQiw2REFBZ0JBLEdBQUc7UUFDNUM7UUFHRlcsUUFBUUMsR0FBRyxDQUFDO1FBQ1osTUFBTWMsWUFBWU8sSUFBSSxDQUFDWCxVQUFVLHdDQUF3QztRQUV6RVgsUUFBUUMsR0FBRyxDQUFDO1FBQ1osTUFBTXNCLFlBQVksTUFBTTlCLHFEQUFVQSxDQUFDK0IsZUFBZSxDQUFDVCxhQUFhO1lBQUNKO1NBQVE7UUFDekVYLFFBQVFDLEdBQUcsQ0FBQywwQkFBb0MsT0FBVnNCO1FBRXRDLE1BQU05QixxREFBVUEsQ0FBQ2dDLGtCQUFrQixDQUFDRixXQUFXO1FBQy9DdkIsUUFBUUMsR0FBRyxDQUFDO1FBRVosT0FBTztJQUNULEVBQUUsT0FBT0ksT0FBTztRQUNkTCxRQUFRSyxLQUFLLENBQUMsdUJBQXVCQTtRQUNyQyxPQUFPO0lBQ1Q7QUFDRixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvY29tcG9uZW50cy9zb2xhbmEuanM/YTg3MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb25uZWN0aW9uLCBQdWJsaWNLZXksIGNsdXN0ZXJBcGlVcmwsIExBTVBPUlRTX1BFUl9TT0wsIFN5c3RlbVByb2dyYW0sS2V5cGFpciwgVHJhbnNhY3Rpb24gfSBmcm9tICdAc29sYW5hL3dlYjMuanMnO1xyXG5pbXBvcnQgeyBjb25uZWN0aW9uIH0gZnJvbSAnLi9zb2xhbmFDb25maWcnO1xyXG5cclxuLy8gRnVuY3Rpb24gdG8gY29ubmVjdCB3YWxsZXRcclxuZXhwb3J0IGNvbnN0IGNvbm5lY3RXYWxsZXQgPSBhc3luYyAoKSA9PiB7XHJcbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB3aW5kb3cuc29sYW5hICYmIHdpbmRvdy5zb2xhbmEuaXNQaGFudG9tKSB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB3aW5kb3cuc29sYW5hLmNvbm5lY3QoKTtcclxuICAgICAgICBjb25zb2xlLmxvZygnQ29ubmVjdGVkIHRvIHdhbGxldDonLCByZXNwb25zZS5wdWJsaWNLZXkudG9TdHJpbmcoKSk7XHJcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLnB1YmxpY0tleS50b1N0cmluZygpO1xyXG4gICAgICB9IGNhdGNoIChlcnIpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKFwiQ29ubmVjdGlvbiBmYWlsZWQ6XCIsIGVycik7XHJcbiAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGFsZXJ0KFwiUGhhbnRvbSB3YWxsZXQgbm90IGZvdW5kISBQbGVhc2UgaW5zdGFsbCB0aGUgUGhhbnRvbSB3YWxsZXQgZXh0ZW5zaW9uLlwiKTtcclxuICAgIH1cclxuICB9O1xyXG4gIC8vIHNvbGFuYUNvbmZpZy5qc1xyXG4gIGV4cG9ydCBjb25zdCBmbGlwQ29pbiA9IGFzeW5jIChwdWJsaWNLZXksIGFtb3VudCwgc2lkZSkgPT4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc29sZS5sb2coYFB1YmxpYyBLZXk6ICR7cHVibGljS2V5fWApO1xyXG4gICAgICBjb25zb2xlLmxvZyhgQW1vdW50OiAke2Ftb3VudH1gKTtcclxuICAgICAgY29uc29sZS5sb2coYFNpZGUgY2hvc2VuOiAke3NpZGV9YCk7XHJcbiAgXHJcbiAgICAgIGNvbnN0IGZyb21QdWJrZXkgPSBuZXcgUHVibGljS2V5KHB1YmxpY0tleSk7XHJcbiAgXHJcbiAgICAgIC8vIFJlcGxhY2Ugd2l0aCBhY3R1YWwga2V5cGFpciBmcm9tIHRoZSBjb25uZWN0ZWQgd2FsbGV0XHJcbiAgICAgIGNvbnN0IGtleXBhaXIgPSBLZXlwYWlyLmdlbmVyYXRlKCk7IC8vIEZvciB0ZXN0aW5nLCByZXBsYWNlIHdpdGggYWN0dWFsIHdhbGxldCBrZXlwYWlyXHJcbiAgXHJcbiAgICAgIC8vIEZldGNoIHRoZSByZWNlbnQgYmxvY2toYXNoXHJcbiAgICAgIGNvbnN0IHsgYmxvY2toYXNoIH0gPSBhd2FpdCBjb25uZWN0aW9uLmdldExhdGVzdEJsb2NraGFzaCgpO1xyXG4gIFxyXG4gICAgICAvLyBDcmVhdGUgdGhlIHRyYW5zYWN0aW9uXHJcbiAgICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gbmV3IFRyYW5zYWN0aW9uKHsgcmVjZW50QmxvY2toYXNoOiBibG9ja2hhc2gsIGZlZVBheWVyOiBrZXlwYWlyLnB1YmxpY0tleSB9KS5hZGQoXHJcbiAgICAgICAgU3lzdGVtUHJvZ3JhbS50cmFuc2Zlcih7XHJcbiAgICAgICAgICBmcm9tUHVia2V5OiBmcm9tUHVia2V5LFxyXG4gICAgICAgICAgdG9QdWJrZXk6IGZyb21QdWJrZXksIC8vIEZvciBzaW1wbGljaXR5LCBzZW5kaW5nIHRvIHRoZSBzYW1lIGFjY291bnQ7IHJlcGxhY2Ugd2l0aCBhY3R1YWwgcmVjaXBpZW50XHJcbiAgICAgICAgICBsYW1wb3J0czogYW1vdW50ICogMiAqIExBTVBPUlRTX1BFUl9TT0wgLyAxMDAsIC8vIERvdWJsZSB0aGUgYmV0IGFtb3VudFxyXG4gICAgICAgIH0pXHJcbiAgICAgICk7XHJcbiAgXHJcbiAgICAgIGNvbnNvbGUubG9nKCdTaWduaW5nIHRyYW5zYWN0aW9uLi4uJyk7XHJcbiAgICAgIGF3YWl0IHRyYW5zYWN0aW9uLnNpZ24oa2V5cGFpcik7IC8vIFNpZ24gdGhlIHRyYW5zYWN0aW9uIHdpdGggdGhlIGtleXBhaXJcclxuICBcclxuICAgICAgY29uc29sZS5sb2coJ1NlbmRpbmcgdHJhbnNhY3Rpb24uLi4nKTtcclxuICAgICAgY29uc3Qgc2lnbmF0dXJlID0gYXdhaXQgY29ubmVjdGlvbi5zZW5kVHJhbnNhY3Rpb24odHJhbnNhY3Rpb24sIFtrZXlwYWlyXSk7XHJcbiAgICAgIGNvbnNvbGUubG9nKGBUcmFuc2FjdGlvbiBzaWduYXR1cmU6ICR7c2lnbmF0dXJlfWApO1xyXG4gIFxyXG4gICAgICBhd2FpdCBjb25uZWN0aW9uLmNvbmZpcm1UcmFuc2FjdGlvbihzaWduYXR1cmUsICdjb25maXJtZWQnKTtcclxuICAgICAgY29uc29sZS5sb2coJ1RyYW5zYWN0aW9uIGNvbmZpcm1lZC4nKTtcclxuICBcclxuICAgICAgcmV0dXJuICd3aW4nO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcihcIlRyYW5zYWN0aW9uIGZhaWxlZDpcIiwgZXJyb3IpO1xyXG4gICAgICByZXR1cm4gJ2Vycm9yJztcclxuICAgIH1cclxuICB9OyJdLCJuYW1lcyI6WyJDb25uZWN0aW9uIiwiUHVibGljS2V5IiwiY2x1c3RlckFwaVVybCIsIkxBTVBPUlRTX1BFUl9TT0wiLCJTeXN0ZW1Qcm9ncmFtIiwiS2V5cGFpciIsIlRyYW5zYWN0aW9uIiwiY29ubmVjdGlvbiIsImNvbm5lY3RXYWxsZXQiLCJ3aW5kb3ciLCJzb2xhbmEiLCJpc1BoYW50b20iLCJyZXNwb25zZSIsImNvbm5lY3QiLCJjb25zb2xlIiwibG9nIiwicHVibGljS2V5IiwidG9TdHJpbmciLCJlcnIiLCJlcnJvciIsImFsZXJ0IiwiZmxpcENvaW4iLCJhbW91bnQiLCJzaWRlIiwiZnJvbVB1YmtleSIsImtleXBhaXIiLCJnZW5lcmF0ZSIsImJsb2NraGFzaCIsImdldExhdGVzdEJsb2NraGFzaCIsInRyYW5zYWN0aW9uIiwicmVjZW50QmxvY2toYXNoIiwiZmVlUGF5ZXIiLCJhZGQiLCJ0cmFuc2ZlciIsInRvUHVia2V5IiwibGFtcG9ydHMiLCJzaWduIiwic2lnbmF0dXJlIiwic2VuZFRyYW5zYWN0aW9uIiwiY29uZmlybVRyYW5zYWN0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/components/solana.js\n"));

/***/ })

});